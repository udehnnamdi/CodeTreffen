{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\code-treffen\\\\pages\\\\[treffenId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport TreffenDetail from '../../components/treffen/TreffenDetail';\n\nfunction TreffenDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.treffenData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.treffenData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreffenDetail, {\n      image: props.treffenData.image,\n      title: props.treffenData.title,\n      address: props.treffenData.address,\n      description: props.treffenData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TreffenDetails;\nexport var __N_SSG = true;\nexport default TreffenDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreffenDetails\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/code-treffen/pages/[treffenId]/index.js"],"names":["Fragment","Head","TreffenDetail","TreffenDetails","props","treffenData","title","description","image","address"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,WAAN,CAAkBC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,WAAN,CAAkBE;AAApD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,WAAN,CAAkBG,KAD3B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,WAAN,CAAkBC,KAF3B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,WAAN,CAAkBI,OAH7B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,WAAN,CAAkBE;AAJjC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQJ,c;;AAoET,eAAeA,cAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport { Fragment } from 'react';\r\nimport Head from 'next/head';\r\n\r\nimport TreffenDetail from '../../components/treffen/TreffenDetail';\r\n\r\nfunction TreffenDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.treffenData.title}</title>\r\n        <meta name='description' content={props.treffenData.description} />\r\n      </Head>\r\n      <TreffenDetail\r\n        image={props.treffenData.image}\r\n        title={props.treffenData.title}\r\n        address={props.treffenData.address}\r\n        description={props.treffenData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://udehnnamdi:We0ZPRksScfRAMjD@cluster0.wlpvc.mongodb.net/codeTreffen?retryWrites=true&w=majority'\r\n);\r\n  const db = client.db();\r\n\r\n  const treffenCollection = db.collection('codeTreffen');\r\n\r\n  const treffen = await treffenCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: 'blocking',\r\n    paths: treffen.map((treff) => ({\r\n      params: { treffenId: treff._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  \r\n\r\n  const treffenId = context.params.treffenId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://udehnnamdi:We0ZPRksScfRAMjD@cluster0.wlpvc.mongodb.net/codeTreffen?retryWrites=true&w=majority'\r\n);\r\n  const db = client.db();\r\n\r\n  const treffenCollection = db.collection('treffen');\r\n\r\n  const selectedTreffen = await treffenCollection.findOne({\r\n    _id: ObjectId(treffenId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      treffenData: {\r\n        id: selectedTreffen._id.toString(),\r\n        title: selectedTreffen.title,\r\n        address: selectedTreffen.address,\r\n        image: selectedTreffen.image,\r\n        description: selectedTreffen.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default TreffenDetails;"]},"metadata":{},"sourceType":"module"}